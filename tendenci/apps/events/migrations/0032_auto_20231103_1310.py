# Generated by Django 3.2.23 on 2023-11-03 13:10
import uuid

from django.db import migrations


def fix_missing_repeat_uuid(apps, schema_editor):
    Event = apps.get_model('events', 'Event')

    # Update all Events missing a repeat_uuid so they have one.
    # the Event.save() will update this automatically in production,
    # However, we don't have access to our overriden save method here.
    for event in Event.objects.filter(repeat_uuid__isnull=True):
        event.repeat_uuid = uuid.uuid4()
        event.save()

    # Make sure any original Event is tied back to the repeat through the repeat_uuid
    repeats_processed = set()
    for repeat_event in Event.objects.filter(repeat_of__isnull=False):
        original_event = repeat_event.repeat_of

        if original_event.pk in repeats_processed:
            continue

        # We shouldn't ever get here because all Events at this point should have a uuid,
        # we're just making sure.
        if not repeat_event.repeat_uuid:
            repeat_event.repeat_uuid = uuid.uuid4()
            repeat_event.save()

        original_event.repeat_uuid = repeat_event.repeat_uuid
        original_event.save()

        # Make sure all events with the same 'repeat_of' have the same uuid
        Event.objects.filter(
            repeat_of_id=original_event.pk
            ).exclude(
                pk=repeat_event.pk
            ).update(
                repeat_uuid=repeat_event.repeat_uuid
            )
        repeats_processed.add(original_event.pk)


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0031_auto_20231017_1442'),
    ]

    operations = [
        migrations.RunPython(fix_missing_repeat_uuid, migrations.RunPython.noop)
    ]
