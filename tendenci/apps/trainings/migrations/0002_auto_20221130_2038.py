# Generated by Django 3.2.12 on 2022-11-30 20:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tendenci.libs.tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('trainings', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='certification',
            name='diamond_name',
            field=models.CharField(blank=True, default='Diamond', max_length=50),
        ),
        migrations.AddField(
            model_name='certification',
            name='diamond_period',
            field=models.PositiveSmallIntegerField(blank=True, default=12, verbose_name='Period'),
        ),
        migrations.AddField(
            model_name='certification',
            name='diamond_required_activity',
            field=models.PositiveSmallIntegerField(blank=True, default=1, verbose_name='Required Teaching Activity'),
        ),
        migrations.AddField(
            model_name='certification',
            name='diamond_required_credits',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Required Credits'),
        ),
        migrations.AddField(
            model_name='certification',
            name='diamond_required_online_credits',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Required Online Credits'),
        ),
        migrations.AddField(
            model_name='certification',
            name='enable_diamond',
            field=models.BooleanField(default=False, help_text='Enable diamond to be added'),
        ),
        migrations.AlterField(
            model_name='course',
            name='description',
            field=tendenci.libs.tinymce.models.HTMLField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='course',
            name='min_score',
            field=models.PositiveSmallIntegerField(default=80),
        ),
        migrations.AlterField(
            model_name='course',
            name='name',
            field=models.CharField(db_index=True, max_length=150, unique=True, verbose_name='Course Name'),
        ),
        migrations.AlterField(
            model_name='schoolcategory',
            name='name',
            field=models.CharField(db_index=True, max_length=150, unique=True, verbose_name='Category Name'),
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_type', models.CharField(choices=[('online', 'Online'), ('onsite', 'Onsite')], default='online', max_length=10, verbose_name='Type')),
                ('credits', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('registrant_id', models.IntegerField(blank=True, default=0)),
                ('external_id', models.CharField(default='', max_length=50)),
                ('create_dt', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('update_dt', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('certification_track', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='trainings.certification')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='trainings.course')),
                ('creator', models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainings_transcripts_created', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainings_transcripts_updated', to=settings.AUTH_USER_MODEL)),
                ('school_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='trainings.schoolcategory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transcript',
                'verbose_name_plural': 'Transcripts',
            },
        ),
        migrations.CreateModel(
            name='TeachingActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name', models.CharField(db_index=True, max_length=150)),
                ('date', models.DateField()),
                ('description', models.TextField(blank=True, default='')),
                ('create_dt', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('update_dt', models.DateTimeField(auto_now=True, verbose_name='Date')),
                ('status_detail', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('disapproved', 'Disapproved')], default='pending', max_length=15, verbose_name='Status')),
                ('creator', models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teaching_activities_created', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teaching_activities_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Teaching Activity',
                'verbose_name_plural': 'Teaching Activities',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.PositiveSmallIntegerField(default=0)),
                ('create_dt', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('update_dt', models.DateTimeField(auto_now=True, verbose_name='Date')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainings.course')),
                ('creator', models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainings_exams_created', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainings_exams_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Exam',
                'verbose_name_plural': 'Exams',
            },
        ),
    ]
